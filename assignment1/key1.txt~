Exercise 1.1

2. C-s U T Enter
3. C-s I n Enter
4. C-x [ C-s H M-f
5. C-s a r r o w M-b
6. C-e
7. C-a
8. C-x [
9. C-x C-c

Exercise 1.2

2. M-g M-g 1 8 Enter C-k
3. C-s D E Enter C-a C-k
4. C-s < ! Enter C-a M-k C-n C-k
5. C-s < ! C-b C-b M-7 C-d

Exercise 1.3

2. M-% A s s i g n m e n t SP 1 Enter A s s i g n m e n t SP 3 7 Enter SP SP Enter
3. C-x [ M-% U T F - 8 Enter U S - A S C I I Enter SP Enter
4. C-x [ C-s o l C-e Enter

Exercise 1.4

3. C-x ] M-{ C-f C-SP C-e M-w M-g M-g 3 3 8 Enter Enter C-y RIGHTARROW C-k
   C-x ] M-6 M-{ C-f C-SP M-e C-n M-w M-g M-g 2 9 8 Enter C-y C-a C-d C-p C-d
   C-x ] M-9 M-{ C-f C-SP C-e M-w M-g M-g 9 1 C-y
   C-x ] M-12 M-{ C-f C-SP C-e M-w M-g M-g 1 5 C-y
5. C-x ] M-14 M-{ C-SP C-x } c-w
6. C-y
7. - - >  M-15 M-{ < ! - - Enter M-3 M-} C-p < ! - - M-4 M-} C-p < ! - - M-4 M-} C-p C-p <!-- M-6 M-} C-p M-b M-3 C-b < ! - -

   I had to add multiple comment brackets because using one was not commenting out everything.

8. C-x [ C-s < o l > C-s C-s C-s C-s C-s C-s C-s  There are 7 instances of <ol>
   C-x [ C-% < o l > Enter < O l > Enter SP SP SP SP SP SP SP

Exercise 1.5

1. M-x m a k e - d i r e c t o r y Enter junk Enter
2. C-x C-f j u n k / h e l l o . c
3. M-x c o m p i l e Enter C-SP C-a C-k g c c h e l l o . c SP - o SP h e l l o
4. M-! . / h e l l o SP > > SP ~ / k e y 1 . t x t

Entermkdir junk   cd junk   emacs hello.c  gcc hello.c -o hello

#include <stdio.h>
int
main (void)
{
 char n = '\n';
 char b = '\\';
 char q = '"';
 char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c char n = '%cn';%c char b = '%c%c';%c char q = '%c';%c char const *p = %c%s%c;%c printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c return 0;%c}%c";
 printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
 return 0;
}

Exercise 1.6

1. C-x b Enter
2. ( r a n d o m ) C-j
3. ( s e t q SP x SP ( r a n d o m ) ) C-j
   ( s e t q SP y SP ( r a n d o m ) ) C-j
   ( s e t q SP z SP ( r a n d o m ) ) C-j
4. ( * SP x SP y SP z ) C-j

   The answer is not the correct answer and it is the wrong sign.
   This is probably due to overflow when multiplying large numbers.

5. M-: ( * SP x SP y SP z ) Enter

   This gave out the same value but with two more values following it.
   This command also did not print to the buffer.

6. The random integers are not truly random. They are psuedorandom in the sense that it acts like
   a random number generator but not quite. Random number generators typically take an input
   number called the seed and run this through an algorithm that makes it very difficult for humans
   to predict the outcome. However, it is still possible and therefore not completely random. In
   this problem, the input seed was very likely the previously called random number. 
